@mixin aspect-ratio($ratio: 1 1, $selector: "> :first-child") {
    $selector: unquote($selector);

    padding-bottom: percentage(nth($ratio, 2) / nth($ratio, 1));
    position: relative;

    #{$selector} {
        left: 0;
        height: 100%;
        position: absolute;
        top: 0;
        width: 100%;
    }
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin add-overlay($transparancy: 0.3) {
  &:after {
    content: "";
    height: 100%;
    width: 100%;
    position: absolute;
    bottom: -15px;
    left: 0;
    top: 0;
    z-index: 0;
    width: 100%;
    background-color: rgba(black, $transparancy);
    display: block;
  }
}

@mixin triangle($direction, $color: currentcolor, $size: 1em) {
  @if not index(top right bottom left, $direction) {
    @error "Direction must be either `top`, `right`, `bottom` or `left`.";
  }

  width: 0;
  height: 0;
  content: '';
  z-index: 2;
  border-#{opposite-position($direction)}: ($size * 1.5) solid $color;
  
  $perpendicular-borders: $size solid transparent;
  
  @if $direction == top or $direction == bottom {
    border-left:   $perpendicular-borders;
    border-right:  $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top:    $perpendicular-borders;
  }
}

@mixin square($dimention) {
    width: $dimention;
    height: $dimention;
}


@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}

@function spacing($key) {
    @if map-has-key($gutter, $key) {
        @return map-get($gutter, $key);
    }

    @warn "Unknown `#{$key}` in $colors.";
    @return null;
}
